# Deploys terraform infrastructure to a DEV environment whenever commits are
# pushed to any branch that is not "main"
# name: Terraform DEV CI/CD Pipeline
on:
  push:
    branches:
      - "**"
      - "!main"
#     paths:
#       - "**.tf"
#       - "**.tfvars"
jobs:
  - name: Create annotation for build error
    run: echo "tf-dev-cicd-pr.yml"
#   terraform:
#     name: TF Dev Apply
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repo
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - name: TF Setup
#         uses: hashicorp/setup-terraform@v3
#       - name: Terraform Init
#         run: terraform init
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           TF_ACTION_WORKING_DIR: '.'
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEV_KEY }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEV_SECRET }}
#           TF_CLI_ARGS: '-var-file="env/dev.tfvars" -backend-config="bucket=${{ secrets.AWS_DEV_TFSTATE_S3 }}"'
#       - name: Terraform Validate
#         run: terraform validate
#       - name: Terraform Plan
#         run: terraform plan
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           TF_ACTION_WORKING_DIR: '.'
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEV_KEY }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEV_SECRET }}
#           TF_CLI_ARGS: '-var-file="env/dev.tfvars"'
#       - name: Terraform security checks (tfsec)
#         uses: aquasecurity/tfsec-pr-commenter-action@main
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           tfsec_args: --config-file .tfsec.yml
#       - name: TF documentation in README.md
#         uses: terraform-docs/gh-actions@v1
#         with:
#           working-dir: .
#           output-file: README.md
#           output-method: inject
#           git-push: "true"
#       - name: TF tagging (yor)
#         uses: bridgecrewio/yor-action@main
#       - name: TF Apply
#         run: terraform apply -auto-approve
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           TF_ACTION_WORKING_DIR: '.'
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEV_KEY }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEV_SECRET }}
#           TF_CLI_ARGS: '-var-file="env/dev.tfvars"'
