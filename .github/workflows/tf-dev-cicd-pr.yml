# Deploys terraform infrastructure to a DEV environment whenever commits are
# pushed to any branch that is not "main"
# name: Terraform DEV CI/CD Pipeline
on:
  push:
    branches:
      - "**"
      - "!main"
    paths:
      - "**.tf"
      - "**.tfvars"
jobs:
  terraform:
    name: Infrastructure Jobs (dev)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: TF Setup (dev)
        uses: hashicorp/setup-terraform@v3
      - name: TF Init (dev)
        run: terraform init
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_ACTION_WORKING_DIR: '.'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEV_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEV_SECRET }}
          TF_CLI_ARGS: '-var-file="env/dev.tfvars" -backend-config="bucket=${{ secrets.AWS_DEV_TFSTATE_S3 }}"'
      - name: TF Validate (dev)
        run: terraform validate
      - name: TF Plan (dev)
        run: terraform plan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_ACTION_WORKING_DIR: '.'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEV_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEV_SECRET }}
          TF_CLI_ARGS: '-var-file="env/dev.tfvars"'
      - name: TF Security (dev)
        uses: aquasecurity/tfsec-pr-commenter-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tfsec_args: --config-file .tfsec.yml
      - name: TF documentation in README.md  (dev)
        uses: terraform-docs/gh-actions@v1
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: "true"
      - name: TF Apply  (dev)
        run: terraform apply -auto-approve
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_ACTION_WORKING_DIR: '.'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEV_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEV_SECRET }}
          TF_CLI_ARGS: '-var-file="env/dev.tfvars"'
